(window.webpackJsonp=window.webpackJsonp||[]).push([[264],{644:function(t,a,s){"use strict";s.r(a);var e=s(8),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"types-and-operators"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#types-and-operators"}},[t._v("#")]),t._v(" Types and Operators")]),t._v(" "),s("h2",{attrs:{id:"dynamically-typed-languages"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dynamically-typed-languages"}},[t._v("#")]),t._v(" Dynamically-Typed Languages")]),t._v(" "),s("p",[t._v("JavaScript 有別於 C++、Java⋯⋯ 等靜態類型語言，屬於動態類型語言（Dynamically-Typed Languages），編譯器會在程式運行時，根據變數的值來給定資料型別，而不用在撰寫程式時就先進行宣告。")]),t._v(" "),s("h2",{attrs:{id:"primitive-types"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#primitive-types"}},[t._v("#")]),t._v(" Primitive Types")]),t._v(" "),s("p",[t._v("JavaScript 根據 ECMAScript 標準，定義了 "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Primitive",target:"_blank",rel:"noopener noreferrer"}},[t._v("原始類型（Primitive Types）")]),t._v("和物件（Objects）共八種資料型別。除了物件以外的資料型別都是不可變的（immutable），這些資料型別就稱為原始類型：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Undefined",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("undefined")])]),t._v(" 表示還不存在，是所有變數的初始值，直到給變數賦值之前，變數的值都不會改變，應該避免使用它來對變數進行賦值")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Null",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("null")])]),t._v(" 表示不存在，可以使用他來對變數進行賦值，表示變數沒有值或不存在")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Boolean",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("Boolean")])]),t._v(" 為布林值，可以為真 "),s("code",[t._v("true")]),t._v(" 或否 "),s("code",[t._v("false")])]),t._v(" "),s("li",[s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Number",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("Number")])]),t._v(" 為數值型態，是永遠都有小數點跟在後面的浮點數（floating point number）")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/String",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("String")])]),t._v(" 為字串，由一連串的字元所組成，被包裹在單引號或雙引號之間")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Symbol",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("Symbol")])]),t._v(" 為符號類型，是 ECMAScript 6 所新定義的類型，可以用來生成全局環境中唯一的值")])]),t._v(" "),s("div",{staticClass:"callout"},[s("p",{staticClass:"title"},[t._v("💡 BigInt")]),s("p",[s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/BigInt",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("BigInt")])]),t._v(" 是 JavaScript 所新定義的一個數字基本類型，可以使用任意精度來表示整數，在這門課錄製時還沒有出現。使用 "),s("code",[t._v("BitInt")]),t._v(" 可以安全地儲存與操作大整數。")])]),s("h2",{attrs:{id:"operators"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#operators"}},[t._v("#")]),t._v(" Operators")]),t._v(" "),s("p",[t._v("所謂的運算子（Operators）是一個特殊的函數，接收兩個參數並返回一個值。比如：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 7")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("p",[t._v("當直譯器在進行解析時，遇到運算子會呼叫寫好的函數，這些運算子讓我們得以用中綴表達式來對數值進行運算。")]),t._v(" "),s("h2",{attrs:{id:"operator-precedence-and-associativity"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#operator-precedence-and-associativity"}},[t._v("#")]),t._v(" Operator Precedence and Associativity")]),t._v(" "),s("p",[t._v("當一個表達式出現多個運算子時，就必須討論運算符的優先級（Precedence）和相依性（Associativity）了：")]),t._v(" "),s("ul",[s("li",[t._v("優先級（Precedence）決定了表達式中運算執行的先後次序，優先級較高的運算子會先被執行")]),t._v(" "),s("li",[t._v("相依性（Associativity）決定了擁有相同優先級的運算子的先後次序，可以分為左相依性與右相依性")])]),t._v(" "),s("p",[t._v("舉個例子來說：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 乘法運算子優先級較高，所以先計算 4 * 5 的結果再與 3 進行相加")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 23")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  z "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表達式中都是進行賦值的等號運算子，由於等號具備右相依性")]),t._v("\nx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" z"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 由右至左進行運算，因此 y = z 賦值為 4 之後再進行 x = y")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" z"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4 4 4")]),t._v("\n")])])]),s("p",[t._v("關於運算子的優先級與相依性，可以到 "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN | Operator precedence")]),t._v(" 進行查看。")]),t._v(" "),s("h2",{attrs:{id:"type-coercion"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#type-coercion"}},[t._v("#")]),t._v(" Type Coercion")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Type_coercion",target:"_blank",rel:"noopener noreferrer"}},[t._v("強制轉型（Type Coercion）")]),t._v(" 會隱式地自動將數值從一種資料型別轉換為另外一種資料型別。比如以下情況：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在表達式中，直譯器會將數字類型的 1 強制轉型為字串 '1' 再進行運算")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 12")]),t._v("\n")])])]),s("div",{staticClass:"callout"},[s("p",{staticClass:"title"},[t._v("💡 類型轉換（Type Conversion）")]),s("p",[t._v("除了強制轉型（Type Coercion）之外，開發者也可以在程式碼中顯示地進行 "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Type_conversion",target:"_blank",rel:"noopener noreferrer"}},[t._v("類型轉換（Type Conversion）")]),t._v("。")])]),s("h2",{attrs:{id:"comparision-operators-and-equality"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#comparision-operators-and-equality"}},[t._v("#")]),t._v(" Comparision Operators and Equality")]),t._v(" "),s("h3",{attrs:{id:"type-coercion-and-comparisons"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#type-coercion-and-comparisons"}},[t._v("#")]),t._v(" Type Coercion and Comparisons")]),t._v(" "),s("p",[t._v("由於強制轉型的原因，在使用比較運算子時可能會產生非預期的結果：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 由於 < 運算子為左相依性，會先運算 1 < 2 得到 true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 接著強制轉型將 true 轉為 1 再得到 0 < 3 為 true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 由於 < 運算子為左相依性，會先運算 3 < 2 得到 false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 接著強制轉型將 false 轉為 0 再得到 0 < 1 為 true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("h2",{attrs:{id:"abstract-equality-comparison-and-strict-equality-comparison"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstract-equality-comparison-and-strict-equality-comparison"}},[t._v("#")]),t._v(" Abstract Equality Comparison and Strict Equality Comparison")]),t._v(" "),s("p",[t._v("在 JavaScript 共提供三種比較運算子：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators#Identity",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("===")])]),t._v(" 在進行比較運算時，不會進行類型轉換")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators#Equality",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("==")])]),t._v(" 在進行比較運算時，會先進行類型轉換，再比較引用地址是否相同")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("Object.is")])]),t._v(" 是 ECMAScript 6 所引入的比較運算，通常拿來處理 "),s("code",[t._v("NaN")]),t._v(" 的比較或 "),s("code",[t._v("0")]),t._v(" 之間的比較，其餘情況通常會使用 "),s("code",[t._v("===")]),t._v(" 替代。")])]),t._v(" "),s("p",[t._v("關於相等比較的一些情況，可以參考 "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN | Equality Comparisons and Sameness")]),t._v(" 提供的表格。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("is")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("p",[t._v("https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness")]),t._v(" "),s("h2",{attrs:{id:"existence-and-booleans"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#existence-and-booleans"}},[t._v("#")]),t._v(" Existence and Booleans")]),t._v(" "),s("h2",{attrs:{id:"default-values"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#default-values"}},[t._v("#")]),t._v(" Default Values")])])}),[],!1,null,null,null);a.default=r.exports}}]);