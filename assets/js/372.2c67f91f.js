(window.webpackJsonp=window.webpackJsonp||[]).push([[372],{752:function(e,a,t){"use strict";t.r(a);var r=t(8),o=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"database-design"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#database-design"}},[e._v("#")]),e._v(" Database Design")]),e._v(" "),t("h2",{attrs:{id:"lecture-normalization"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lecture-normalization"}},[e._v("#")]),e._v(" [Lecture] Normalization")]),e._v(" "),t("p",[t("strong",[e._v("Normalization")]),e._v(" is the process of efficiently organizing data in a database.")]),e._v(" "),t("ul",[t("li",[e._v("To eliminate redundant data.")]),e._v(" "),t("li",[e._v("To only store related data in a table.")])]),e._v(" "),t("p",[e._v("The benefits of Normalization are:")]),e._v(" "),t("ul",[t("li",[e._v("Reduce storage space.")]),e._v(" "),t("li",[e._v("Reduce insert, update and deletion anomalies.")]),e._v(" "),t("li",[e._v("Improve query performance.")])]),e._v(" "),t("p",[e._v("There are levels of normalization:")]),e._v(" "),t("ul",[t("li",[e._v("1st Normal Form (1NF)")]),e._v(" "),t("li",[e._v("2nd Normal Form (2NF)")]),e._v(" "),t("li",[e._v("3rd Normal Form (3NF)")]),e._v(" "),t("li",[e._v("Boyce and Codd Normal Form (BCNF)")])]),e._v(" "),t("h2",{attrs:{id:"lecture-1st-normal-form-1nf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lecture-1st-normal-form-1nf"}},[e._v("#")]),e._v(" [Lecture] 1st Normal Form (1NF)")]),e._v(" "),t("ul",[t("li",[e._v("No repeated rows of data")]),e._v(" "),t("li",[e._v("Columns only contain a single value.")]),e._v(" "),t("li",[e._v("The table has a primary key.")])]),e._v(" "),t("h2",{attrs:{id:"lecture-2nd-normal-form-2nf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lecture-2nd-normal-form-2nf"}},[e._v("#")]),e._v(" [Lecture] 2nd Normal Form (2NF)")]),e._v(" "),t("ul",[t("li",[e._v("Conform to 1NF")]),e._v(" "),t("li",[e._v("Every columns that is not a primary key of the table is dependant on the whole of the primary key")])]),e._v(" "),t("h2",{attrs:{id:"lecture-3rd-normal-form-3nf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lecture-3rd-normal-form-3nf"}},[e._v("#")]),e._v(" [Lecture] 3rd Normal Form (3NF)")]),e._v(" "),t("ul",[t("li",[e._v("Conform to 2NF")]),e._v(" "),t("li",[e._v("Every columns that is not a primary key is only dependant on the whole of the primary key")])]),e._v(" "),t("h2",{attrs:{id:"lecture-relationships"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lecture-relationships"}},[e._v("#")]),e._v(" [Lecture] Relationships")]),e._v(" "),t("ul",[t("li",[e._v("One to One: Where a key to one table appears no more than once as the key in another table and vice versa.")]),e._v(" "),t("li",[e._v("One to Many: Where a primary key of one table can be in multiple rows of a foreign key column of another table.")]),e._v(" "),t("li",[e._v("Many to Many:")])]),e._v(" "),t("h2",{attrs:{id:"lecture-constraints"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lecture-constraints"}},[e._v("#")]),e._v(" [Lecture] Constraints")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("NOT NULL")]),e._v(": A column can't contain any NULL values.")]),e._v(" "),t("li",[t("code",[e._v("UNIQUE")]),e._v(": A column can't contain any duplicate values of data.")]),e._v(" "),t("li",[t("code",[e._v("PRIMARY KEY")]),e._v(": A column that uniquely identifies each row of data.")]),e._v(" "),t("li",[t("code",[e._v("FOREIGN KEY")]),e._v(": A column which is related to a primary key in another table.")])])])}),[],!1,null,null,null);a.default=o.exports}}]);