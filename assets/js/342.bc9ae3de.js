(window.webpackJsonp=window.webpackJsonp||[]).push([[342],{722:function(t,a,e){"use strict";e.r(a);var s=e(8),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"variables-and-memory"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#variables-and-memory"}},[t._v("#")]),t._v(" Variables and Memory")]),t._v(" "),e("h2",{attrs:{id:"variables-are-memory-references"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#variables-are-memory-references"}},[t._v("#")]),t._v(" Variables are Memory References")]),t._v(" "),e("h3",{attrs:{id:"the-id-function"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-id-function"}},[t._v("#")]),t._v(" The "),e("code",[t._v("id()")]),t._v(" Function")]),t._v(" "),e("ul",[e("li",[t._v("In Python, we can find out the memory address referenced by a variable by using the "),e("code",[t._v("id()")]),t._v(" function.")]),t._v(" "),e("li",[t._v("This will return a base-10 number. We can convert this base-10 number to hexademical by using the "),e("code",[t._v("hex()")]),t._v(" function.")])]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("my_var "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("my_var"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("my_var"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("hex")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("my_var"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"reference-counting"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reference-counting"}},[t._v("#")]),t._v(" Reference Counting")]),t._v(" "),e("h3",{attrs:{id:"finding-th-reference-count"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#finding-th-reference-count"}},[t._v("#")]),t._v(" Finding th Reference Count")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sys\nsys"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getrefcount"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("my_var"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("Passing "),e("code",[t._v("my_var")]),t._v(" to "),e("code",[t._v("getrefcount()")]),t._v(" creates an extra reference!")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" ctypes\nctypes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c_long"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("from_address"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("address"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value\n")])])]),e("p",[t._v("Here, we just pass the memory adddress (an integer), not a reference. It doesn't affect reference count.")]),t._v(" "),e("h2",{attrs:{id:"garbage-collection"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#garbage-collection"}},[t._v("#")]),t._v(" Garbage Collection")])])}),[],!1,null,null,null);a.default=n.exports}}]);