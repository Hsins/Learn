(window.webpackJsonp=window.webpackJsonp||[]).push([[165],{544:function(a,t,s){"use strict";s.r(t);var e=s(8),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"manipulating-containers-with-the-docker-client"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#manipulating-containers-with-the-docker-client"}},[a._v("#")]),a._v(" Manipulating Containers with the Docker Client")]),a._v(" "),s("h2",{attrs:{id:"creating-and-running-a-container-from-an-image"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creating-and-running-a-container-from-an-image"}},[a._v("#")]),a._v(" Creating and Running a Container from an image")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Create and Run the hello-world container")]),a._v("\n$ docker run hello-world\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Create and Run the override commands with the busybox container")]),a._v("\n$ docker run busybox "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" hi there\n$ docker run busybox "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" bye there\n")])])]),s("h2",{attrs:{id:"listing-running-containers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#listing-running-containers"}},[a._v("#")]),a._v(" Listing Running Containers")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# List all running containers")]),a._v("\n$ docker "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Show all containers that have been created on our machine")]),a._v("\n$ docker "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" --all\n")])])]),s("h2",{attrs:{id:"docker-run-docker-create-docker-start"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-run-docker-create-docker-start"}},[a._v("#")]),a._v(" Docker Run = Docker Create + Docker Start")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Create docker container")]),a._v("\n$ docker create hello-world\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Start docker container")]),a._v("\n$ docker start "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("CONTAINER_ID"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# without logs")]),a._v("\n$ docker start -a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("CONTAINER_ID"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# with logs")]),a._v("\n")])])]),s("h2",{attrs:{id:"removing-stopped-containers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#removing-stopped-containers"}},[a._v("#")]),a._v(" Removing Stopped Containers")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ docker system prune\n")])])]),s("h2",{attrs:{id:"retrieving-log-outputs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#retrieving-log-outputs"}},[a._v("#")]),a._v(" Retrieving Log Outputs")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Retrieve Logs")]),a._v("\n$ docker logs "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("CONTAINER_ID"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("h2",{attrs:{id:"stop-or-kill-the-running-containers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stop-or-kill-the-running-containers"}},[a._v("#")]),a._v(" Stop or Kill the running Containers")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Stop the running containers")]),a._v("\n$ docker stop "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("CONTAINER_ID"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n$ docker "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("kill")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("CONTAINER_ID"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("h2",{attrs:{id:"multi-command-containers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#multi-command-containers"}},[a._v("#")]),a._v(" Multi-Command Containers")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Execute an additional command in a container")]),a._v("\n$ docker "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" -it "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("CONTAINER_ID"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("COMMAND"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Getting a command prompt in a container")]),a._v("\n$ docker run -it busybox "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sh")]),a._v("\n$ docker "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" -it "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("CONTAINER_ID"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sh")]),a._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);