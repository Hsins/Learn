(window.webpackJsonp=window.webpackJsonp||[]).push([[133],{512:function(t,s,a){"use strict";a.r(s);var e=a(8),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),a("h2",{attrs:{id:"pros-and-cons"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pros-and-cons"}},[t._v("#")]),t._v(" Pros and Cons")]),t._v(" "),a("p",[t._v("缺點：")]),t._v(" "),a("ul",[a("li",[t._v("涉及了較為底層的概念如指針（pointer），相較其他語言來說並不容易學習")]),t._v(" "),a("li",[t._v("由於可以透過記憶體位置進行操作，如果不小心的話容易導致嚴重的錯誤，也因此開發所需時間較長")]),t._v(" "),a("li",[t._v("屬於編譯式語言，並不完全地跨平台")])]),t._v(" "),a("p",[t._v("優點：")]),t._v(" "),a("ul",[a("li",[t._v("運行速度較快，能夠在短時間內完成許多任務")]),t._v(" "),a("li",[t._v("可以操作較為底層的硬體設備")]),t._v(" "),a("li",[t._v("可以促使開發者更深一層地了解電腦架構")])]),t._v(" "),a("h2",{attrs:{id:"c-compilers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-compilers"}},[t._v("#")]),t._v(" C++ Compilers")]),t._v(" "),a("p",[t._v("所謂的編譯器（Compiler）是別人所寫好的程式，可以將某種程式語言的源代碼轉換成另外一種語言。開發者只需要編寫高階語言如 C++ 的源代碼，再透過編譯器產生電腦可以解讀與執行的低階機器語言。目前常見的 C++ 編譯器有：")]),t._v(" "),a("ul",[a("li",[t._v("GNU G++ / GCC")]),t._v(" "),a("li",[t._v("MingGW")]),t._v(" "),a("li",[t._v("Visual C++ Compiler")])]),t._v(" "),a("p",[t._v("其他的編譯器可以參考 "),a("a",{attrs:{href:"https://www.wikiwand.com/en/List_of_compilers#/C++_compilers",target:"_blank",rel:"noopener noreferrer"}},[t._v("C++ Compilers")]),t._v(" 提供的列表。")]),t._v(" "),a("h2",{attrs:{id:"integrated-development-environments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#integrated-development-environments"}},[t._v("#")]),t._v(" Integrated Development Environments")]),t._v(" "),a("p",[t._v("進行開發的過程中，除了編輯文本的功能之外，也經常需要對撰寫好的程式進行構建與除錯。為了提升開發的效率，經常會將編輯器、編譯器、除錯器、類別瀏覽器、物件結構圖 ⋯⋯ 等功能整合起來，也就是所謂的整合開發環境（IDE, Integrated Development Environment）。這些 IDE 有時候會支援不同程式語言，或者是針對特定的程式語言量身打造，常見的 C++ IDE 如下：")]),t._v(" "),a("ul",[a("li",[t._v("Eclipse CDT")]),t._v(" "),a("li",[t._v("Visual C++")]),t._v(" "),a("li",[t._v("Code Blocks")]),t._v(" "),a("li",[t._v("Emacs, Vim")])]),t._v(" "),a("h2",{attrs:{id:"the-first-program-hello-world"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-first-program-hello-world"}},[t._v("#")]),t._v(" The First Program: Hello World")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iosteam>")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"outputting-text"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#outputting-text"}},[t._v("#")]),t._v(" Outputting Text")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Starting Program..."')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" flush"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This is some text."')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl\n  cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Banana. "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Apple. "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Orange."')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This is some more text."')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在 C++ 中替 "),a("code",[t._v("cout")]),t._v(" 設計了緩衝區的概念，透過重載之後的 "),a("code",[t._v("<<")]),t._v(" 運算符將資料先讀入記憶體的緩衝區中，直到緩衝區滿了才會清空緩衝區並把字串輸出到如 "),a("code",[t._v("stdout")]),t._v(" 這類的輸出流。其中：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("endl")]),t._v(" 會將緩衝區的資料加上空行後進行輸出，並清除緩衝區內容")]),t._v(" "),a("li",[a("code",[t._v("flush")]),t._v(" 會將緩衝區的資料直接進行輸出，並清除緩衝區內容")])])])}),[],!1,null,null,null);s.default=r.exports}}]);